import { PaletteContext } from "@/stores/contexts";
import { useContext } from "react";
import { BOOKMARK_DATA } from "../header/Bookmarks";
import { PokeDetailsData, PokeMetaData } from "../../../interfaces/pokemon";

/**
 * Pokemon meta data details
 */
export const Details: React.FC<
    PokeDetailsData &
        Omit<PokeMetaData, "cries"> & {
            habitat?: string | null;
            shape?: string | null;
        }
> = (props) => {
    const { dark } = useContext(PaletteContext);
    const { id, icon } = BOOKMARK_DATA.species;

    return (
        <div className="flex flex-col h-full">
            <div
                id={id}
                className="section__header--default"
                style={{ borderColor: dark.background }}
            >
                <i className={icon} style={{ color: dark.background }} />{" "}
                Species Information
            </div>
            <div className="w-full flex flex-col h-full text-sm sm:text-base">
                {[
                    {
                        title: "Capture rate",
                        value: (
                            <>
                                <span
                                    title="Chance to capture at full HP with a pokeball"
                                    className="sm:underline text-base cursor-help"
                                >
                                    {Math.round(
                                        captureRate(props.captureRate ?? 0) *
                                            10000
                                    ) / 100}
                                    %
                                </span>
                                <span className="sm:hidden col-span-2 text-xxs">
                                    Chance to capture at full HP with a
                                    pokeball*
                                </span>
                            </>
                        ),
                    },
                    {
                        title: "Egg cycles",
                        value: (
                            <span>
                                {props.hatchCounter} (
                                {(props.hatchCounter ?? 0) * 128} Steps)
                            </span>
                        ),
                    },
                    {
                        title: "Exp yield",
                        value: <span>{props.baseExperience} exp</span>,
                    },
                    {
                        title: "Habitat",
                        value: (
                            <span className="capitalize">
                                {habitatParser(props.habitat)}
                            </span>
                        ),
                    },
                    {
                        title: "Egg group(s)",
                        value: (
                            <div className="flex gap-4 brightness-75">
                                {props.eggGroups.map((egg) => {
                                    const { color, title } = EGG_GROUPS[egg];
                                    return (
                                        <span
                                            className=""
                                            key={egg}
                                            style={{ color: color }}
                                        >
                                            {title}
                                        </span>
                                    );
                                })}
                            </div>
                        ),
                    },
                    {
                        title: "Growth rate",
                        value: <span>{RATE[props.growthRate ?? ""]}</span>,
                    },
                    {
                        title: "Gender ratio",
                        value: (() => {
                            return (
                                <div className="w-full h-5 flex py-0.5 text-xs">
                                    {!!props.genderRate &&
                                    props.genderRate >= 0 ? (
                                        (() => {
                                            const male = `${
                                                ((8 - (props.genderRate ?? 0)) /
                                                    8) *
                                                100
                                            }%`;
                                            const female = `${
                                                ((props.genderRate ?? 0) / 8) *
                                                100
                                            }%`;
                                            return (
                                                <div className="w-full flex rounded-full overflow-hidden">
                                                    {parseInt(male) > 0 && (
                                                        <div
                                                            title={male}
                                                            tabIndex={0}
                                                            className="min-w-12 group/gender bg-[#6fa8dc] gap-2 flex items-center justify-center relative"
                                                            style={{
                                                                width: male,
                                                            }}
                                                        >
                                                            <i className="max-sm:group-focus/gender:hidden ri-men-line text-base" />
                                                            <span className="max-sm:group-focus/gender:flex hidden">
                                                                {male}
                                                            </span>
                                                        </div>
                                                    )}
                                                    {parseInt(female) && (
                                                        <div
                                                            title={female}
                                                            tabIndex={1}
                                                            className="min-w-12 group/gender bg-[#d5a6bd] gap-2 flex items-center justify-center relative"
                                                            style={{
                                                                width: female,
                                                            }}
                                                        >
                                                            <i className="max-sm:group-focus/gender:hidden ri-women-line text-base" />
                                                            <span className="max-sm:group-focus/gender:flex hidden">
                                                                {female}
                                                            </span>
                                                        </div>
                                                    )}
                                                </div>
                                            );
                                        })()
                                    ) : (
                                        <div className="w-full text-center flex items-center justify-center bg-black text-white rounded-full tracking-wider font-medium">
                                            Genderless
                                        </div>
                                    )}
                                </div>
                            );
                        })(),
                    },
                    {
                        title: "Base friendship",
                        value: <span>{props.baseHappiness}</span>,
                    },
                    {
                        title: "Weight",
                        value: (
                            <span>
                                {props.weight / 10}
                                <span>kg</span> /{" "}
                                {Math.round(props.weight * 2.205) / 10}
                                <span>lbs.</span>
                            </span>
                        ),
                    },
                    {
                        title: "Height",
                        value: (
                            <span>
                                {props.height / 10}
                                <span>m</span> / {metersToFtIn(props.height)}
                            </span>
                        ),
                    },
                    {
                        title: "Shape",
                        value: (
                            <div className="h-12 aspect-square p-1">
                                {SHAPE_ICONS[props.shape ?? ""]}
                            </div>
                        ),
                    },
                ].map(({ title, value }, i) => (
                    <div
                        key={i}
                        className="grid grid-cols-[0.625fr_1fr] w-full h-full max-md:py-1 px-3 items-center"
                        style={{
                            background:
                                i % 2 === 0 ? `${dark.background}1a` : "",
                        }}
                    >
                        <span className="font-medium">{title}</span>
                        {value}
                    </div>
                ))}
            </div>
        </div>
    );
};

/**
 * Constants
 */
const RATE: Record<string, string> = {
    slow: "Slow",
    medium: "Medium",
    fast: "Fast",
    "medium-slow": "Medium Slow",
    "slow-then-very-fast": "Erratic",
    "fast-then-very-slow": "Fluctuating",
};

const EGG_GROUPS: Record<string, { title: string; color: string }> = {
    monster: {
        title: "Monster",
        color: "#D25064",
    },
    water1: {
        title: "Water 1",
        color: "#97B5FD",
    },
    bug: {
        title: "Bug",
        color: "#AAC22A",
    },
    flying: {
        title: "Flying",
        color: "#B29AFA",
    },
    ground: {
        title: "Field",
        color: "#E0C068",
    },
    fairy: {
        title: "Fairy",
        color: "#EE99AC",
    },
    plant: {
        title: "Grass",
        color: "#82D25A",
    },
    humanshape: {
        title: "Human-Like",
        color: "#D29682",
    },
    water3: {
        title: "Water 3",
        color: "#5876BE",
    },
    mineral: {
        title: "Mineral",
        color: "#7A6252",
    },
    indeterminate: {
        title: "Amorphous",
        color: "#8A8A8A",
    },
    water2: {
        title: "Water 2",
        color: "#729AFA",
    },
    ditto: {
        title: "Ditto",
        color: "#A664BF",
    },
    dragon: {
        title: "Dragon",
        color: "#7A42FF",
    },
    "no-eggs": {
        title: "No Eggs Discovered",
        color: "#333333",
    },
};

/**
 * Utility functions
 */
function captureRate(rate: number) {
    return Math.pow(Math.floor((4096 / 3) * (rate ?? 0)) / 1044480, 0.75);
}

function metersToFtIn(height: number) {
    let feet = height * 0.32808;
    return `${Math.floor(feet)}'${Math.round((feet % 1) * 12)}"`;
}

function habitatParser(habitat?: string | null) {
    const split = habitat?.split("-");
    if (!!!split) {
        return "Unknown";
    }
    let first = split[0];
    if (first.endsWith("s")) {
        first = first.replace(/s\b(?![' ])/g, "'s");
    }
    return `${first} ${split.slice(1, split.length).join(" ")}`;
}

const SHAPE_ICONS: Record<string, React.ReactNode> = {
    ball: (
        <svg width="100%" height="100%" viewBox="0 0 200 155">
            <path d="M48 64c3 1 6 5 6 6l1 2 1 7-1 8c-2 5-6 8-10 9l-5-1c-5-3-7-5-8-11V72c0-2 4-6 6-8 4-2 7-2 10 0Zm73-2c9-1 15 15 12 22l-2 5-6 6-5 1c-4-1-8-4-10-9-2-2-2-3-2-8l2-9c1-4 7-9 11-8Zm-2-61 6 1 5 1 3 1 6 2 4 1 5 1c14 6 26 15 35 26l5 6 7 14 1 3 1 2 1 4 2 6v10c0 11-3 18-7 26l-1 3-1 2-1 1-3 5c-5 7-11 13-18 18l-9 6-2 2-2 1-6 3-5 1-5 2-5 2-3 1c-18 3-37 4-55 2l-12-3-6-2-5-2-4-2c-16-7-30-19-40-33l-2-3-3-6-1-3C0 89-1 78 1 66l1-5 1-2 1-4 3-7 1-2 4-6 2-3 15-14c4-4 8-7 13-9l2-1 4-2 4-3h3l5-2 3-2h3l4-1 11-2h38ZM44 53l-7 1-3 1-3 2c-1 0-6 5-7 8l-1 2-3 11 1 7 1 4 1 2 1 2c3 5 6 8 11 11l3 1 6 1 6-1 3-2c4-2 11-10 11-12l1-2 1-10c0-8 1-8-3-15l-5-5c-3-4-4-4-6-5l-8-1Zm86 2c-1-2-17-6-25 5-3 4-7 12-7 19 0 8 2 12 2 12 0 3 10 12 13 12 0 4 16 3 16 1 1 1 14-11 13-14 2 0 4-19-1-24 1 0-8-12-11-11Z" />
        </svg>
    ),
    squiggle: (
        <svg width="100%" height="100%" viewBox="0 0 300 276">
            <path d="m92 0 23 1 5 2 4 1c9 4 18 9 25 17 6 4 11 11 13 15l6 13c5 12 7 26 5 39l-2 9-3 9-2 4-4 7-3 5-23 29c-6 8-9 16-11 25v7l4 5c4 4 12 5 16 4l12-11 22-43c6-14 20-28 27-31l3-1c2-2 10-3 18-2 7 0 9 1 14 4l4 1c4 3 15 14 18 19l2 4 4 9 2 4 4 13 3 18 1 11 3 14v6l2 6 1 5 7 11 2 4 3 5c2 4 3 5 3 8 0 5-1 7-5 8-5 1-14 1-18-2l-4-1-2-2c-7-3-12-8-16-14l-2-4-1-3-2-3-1-4-2-6-1-5-2-5-1-5-2-4-2-4c-7-13-12-15-18-11l-2 3-3 3-1 2-2 3-3 8-1 4-2 6-4 13-1 4-3 6c-7 10-15 19-25 26-19 13-42 19-65 17l-9-1-8-2-9-3-3-1-3-2c-8-4-15-10-21-18l-3-5-3-4-1-3c-4-7-5-9-5-12l-1-5-1-14 1-17 1-6 2-5 1-3 2-3 1-3 5-8 11-13 8-11 1-3c3-4 2-10-3-13l-8-3H50l-13 2-6 1-14-4-3-1-8-9-2-4-2-3c-3-15-2-30 3-45l2-4 1-3 1-2 5-8 2-3 7-8c7-7 17-15 19-15l9-5 5-2 5-1 5-2 6-1 20-1Zm24 31c-3-2-12-3-14-1l-2 1c-3 1-11 9-11 10l-2 3-4 14 3 15 2 3c1 3 6 8 10 12 3 1 4 2 11 1 7 0 8 0 11-2 5-3 9-8 10-10l2-4 3-15-2-9c0-3-6-12-10-15l-6-3h-1Zm-2 18c3 2 3 3 4 6 1 7 0 12-2 15s-4 4-8 4l-5-3c-3-3-3-4-3-13 1-6 2-9 5-12 3-1 6 0 9 3Z" />
        </svg>
    ),
    fish: (
        <svg width="100%" height="100%" viewBox="0 0 342 244">
            <path d="m191 1 29-1h25l3 2c3 2 3 2 3 5 1 5 0 12-1 15l-2 6-1 5-3 12-1 4-1 6-3 8c0 3 0 4 3 6l3 2 8 6c9 6 10 7 11 2 1-6 5-12 13-19 4-4 16-13 18-13l6-3 2-1 3-1 5-2 16-6c2-1 13-3 14-2v16l-2 16-1 12-3 12-2 3-6 13-12 12-3 2-4 1-2 2s2 2 5 2l5 4 11 10 8 11 4 12 2 5 1 9v7l-4 2c-17 5-35 6-52 3l-6-2-4-1c-2-2-9-9-9-11l-1-2-2-5-1-4-9 6-17 12-16 9-3 2-2 1-6 3c-3 0-4 4-1 9 2 4 2 16 0 20l-2 5c0 3-11 14-15 14l-3 1-4 1c-4 0-5 0-10-3-8-4-15-10-20-16l-9-8-3 1-12 1h-16l-13-1-10-2-5-1-13-5-4-1-5-2-13-6-7-3-27-21c-4-5-15-19-15-21l-1-3c-2-2-2-3-2-14 0-10 0-12 2-14l1-4 2-4 2-5 3-6 5-9 2-3 3-6c4-6 16-21 23-27l17-15 4-3 7-5 5-3 4-2 6-2 4-2 8-3 2-1 3-1 4-2 4-1 4-2 6-2 4-1 5-1 4-2 6-1 6-2 5-1 6-2 8-2 8-1 9-1 9-2Zm24 18c-9 0-11 1-15 2l-17 3-5 1-11 3h-5l-3 3 1 1 4 2 6 1 13 5 8 3 2 1 4 2 4 1 3 2 2 1 6 2c5 3 6 3 7-1l4-14 1-6c2-4 2-10 0-11l-9-1ZM79 97l-10 11-1 3-3 14c-1 13 6 28 17 34 4 2 5 2 11 2s8 0 11-2c11-6 18-21 18-34l-3-14-2-3-10-11-6-3c-7-3-15-2-22 3Zm19 12c6 4 9 12 7 22 0 6-1 10-5 13-2 1-3 2-7 2s-4-1-7-2c-3-3-5-7-5-13-1-10 2-18 8-22h9Z" />
        </svg>
    ),
    arms: (
        <svg width="100%" height="100%" viewBox="0 0 348 281">
            <path d="m169 0 19 1 14 3 3 1 6 2 4 2 2 1 3 1 4 2c7 4 13 9 19 15 8 8 10 10 12 15l4 5 3 6 2 4c0 5 3 10 3 11l12 1h15l9 1 8 2 6 1c4 0 8 7 12 14l4 10 1 2 2 4 3 12 1 5 2 7 1 9c4 19 6 38 5 58 0 26-1 31-2 35l-1 9-2 8-1 4-3 6c0 3-17 18-20 18l-3 2-4 1-5 2-16 1-17-1-5-2-9-3-3-1-4-2-1-1-7-5-12-14c-4-7-5-14-5-23 0-11 1-12 4-7 3 4 6 8 8 8l2 2c3 2 13 2 15 0l3-2c2 0 10-9 10-11s0-2-6-2h-9l-4-2-7-8c-2-5-2-13 1-19s8-10 16-13c5-2 6-2 12-2l11 2 4-1 5-8 2-4 2-5v-23c-2-15-4-19-10-22-5-3-9-3-17 0l-7 1c-2 0-5 5-5 6-8 12-18 23-30 30l-5 3-3 2-3 1-3 2-4 1-5 2c-20 5-41 6-62 3l-5-2-4-1-4-2-5-1-6-3-4-2c-15-8-27-21-36-35-3-5-5-7-12-7l-7 2-6 6-2 4-1 17 1 18 2 5 6 11 4 2 11-2a29 29 0 0 1 28 16c3 4 3 14 0 19-3 6-5 7-13 9h-8c-3 0-6 0-6 2 0 4 4 10 7 11l3 2c3 2 14 1 17 0 9-5 10-6 14-12l1-2c1 0 2 3 2 11 0 10 0 12-2 14l-1 4-2 3-1 3c-6 8-13 15-23 20l-12 5-5 2-17 1-17-1-16-8-12-11-3-5c-3-5-6-13-6-20-3-25-4-50-2-75l2-11 1-11 2-8 1-7 2-7 1-7 2-4 1-4 3-8 3-5 1-4 3-4c2-4 6-7 8-7 4-2 9-3 15-3l25-3 3-7 3-7 1-3 2-5 8-11 9-9c8-7 18-13 29-18l2-1 5-2 5-1 4-1 6-2 21-1ZM98 73l-5 8-2 3-1 13 1 12 2 5c0 1 10 11 12 11l3 2 7 1 8-1 4-2 8-7 1-2 2-2 1-4c2-2 3-4 2-13 0-10 0-11-2-15-3-6-10-14-13-14l-3-1c-6-4-18-1-25 6Zm92-6-3 1c-3 0-13 11-13 13l-2 4-1 12v9l3 6c4 6 8 12 13 14 6 3 12 3 18 0 6-2 12-8 15-14 3-5 3-14 3-21-2-11-9-21-19-24-5-2-10-2-14 0Zm-78 16 3-1 3 1c6 2 7 5 8 14 0 6 0 7-2 9l-1 3-2 1-2 2h-3c-4 0-6-2-9-6-3-5-3-12 0-18 2-3 2-4 5-5Zm93 4c2 4 2 6 2 14 0 3-1 5-2 5l-1 3-6 4c-2 0-9-4-9-6l-2-2-1-7c0-4 0-6 2-10 2-3 2-4 5-5l3-1c0-3 6 0 9 5Z" />
        </svg>
    ),
    blob: (
        <svg width="100%" height="100%" viewBox="0 0 300 440">
            <path d="m171 1 10 2 8 2 22 7 8 4c17 9 33 21 45 36l7 10 5 6 4 7 8 16 4 10c9 29 10 60 4 89l-2 6-2 8-2 9-2 6-2 4-2 7-2 6-2 4-4 10-2 4-2 6-16 32-4 7-6 9-6 10-2 2-8 12c-5 6-6 11-5 17 1 4 2 4 11 9 12 6 26 19 26 25l2 5c2 2 2 4 2 11 0 9-1 11-8 23-1 3-5 7-8 8l-7 5c-15 5-31 6-45 1l-3-2-5-2-6-4-4-2-11-10c-18-18-18-18-34-2l-13 12-14 8-4 2-6 2-7 1H73l-7-1-6-2-4-2c-3 0-16-13-16-16l-2-5c-2-1-2-3-2-13s0-12 2-14c4-8 10-15 16-21l8-5 6-3 5-3c3-1 3-1 3-8 0-5 0-7-2-8l-2-4-6-9-6-7-2-3-5-10-3-4-2-3-4-7-3-5-6-12-4-8-5-10-2-6-2-4-2-5-1-4-2-5-3-7-2-7-2-4-2-7-2-6-2-9c-4-23-5-47-2-70l2-9 2-7 2-6 3-5 1-3 2-5 4-8 3-5c5-10 11-18 24-31 10-10 22-20 24-20l3-2 8-4 4-2 4-2 10-4 12-4 9-2 8-1 8-2c8-1 29 0 36 1ZM64 75l-6 2c-6 1-12 6-17 12-9 9-9 23-9 27a51 51 0 0 0 21 36c4 2 5 2 15 2s11 0 13-2l5-2c2 0 11-9 11-11l4-8 2-9v-11l-2-10-2-5c3-1-19-21-23-20-7-2-5-1-12-1Zm122 1-5 2c-3 0-11 8-13 11l-4 8c-3 5-3 6-3 18 0 10 0 12 2 15l2 5 2 3 2 2c0 2 8 10 10 10l3 2c3 2 4 2 14 2 9 0 10 0 13-2l3-2 8-6 6-8 2-5c2-4 2-6 2-17l-1-15-2-4c-3-7-10-14-21-19-7-2-15-3-20 0ZM68 94c7 0 6 0 14 8 2 2 3 4 3 13 0 10-1 12-4 15-4 5-8 7-14 7-4 0-5 0-9-4-5-5-5-6-6-12l-1-10 1-4c0-3 6-11 9-12l7-1Zm143 10c3 5 3 18 1 21l-3 4c-2 5-10 9-14 9-5-1-11-6-14-12-2-3-3-6-3-11 0-6 0-8 2-9l1-3c0-3 6-9 10-9 10-2 16 1 20 10Z" />
        </svg>
    ),
    upright: (
        <svg width="100%" height="100%" viewBox="0 0 293 332">
            <path d="M95 0c3 0 5 1 6 5l2 2 1 3 6 10c1 1 6 0 8-1l6-3 15-8 4-2 4-2c2 0 3 0 5 2l1 8-1 15v8l5 5h10c13 1 15 1 15 7 0 2-3 9-7 15-2 3-3 6-2 9 0 3 1 4 2 5l5 1 3 2 2 1 3 1 5 3c2 2 2 2 2 5l-2 6-2 2-1 3-6 9v5c1 2 3 5 6 6l6 5c2 3 1 6-2 11l-4 5-2 4-1 4 6 8 5 4-1 6-1 8-2 3-1 4c-3 4-3 15 0 18l1 3c6 9 13 16 21 22l3 2 2 1 3 2 12 4 4 2 6 1c8 2 16 3 25 3 15 1 17 1 21 5 3 3 3 7 0 12l-5 4-2 2-7 4-3 2-3 1-2 2-3 1-4 2-6 3-7 3-14 4-5 2-13 3-9 1c-15 3-31 3-46 2-4-1-6 0-7 6-1 4-3 9-6 13-1 3-13 15-14 15l-4 2-13 1-11-1-3-1-5-5c-3-3-4-4-4-10-2-5-2-7 0-11v-14h-2l-3 2c-4 6-12 15-16 16l-3 2-3 1-3 2-14 1-14-1c-5-3-7-5-9-9-3-6-1-12 3-22 1-3 10-12 14-14 3-3 3-3 1-5l-14-15-2-4-3-4v-2l-2-4-1-5c-3-10-3-20-1-30l1-7 1-5 3-9 4-9 6-9c3-4 3-6-2-9-4-1-18-12-20-15l-4-6-8-13-3-12-1-17 5-14c4-6 16-16 27-20l11-7 4-2 5-3 8-6c7-5 25-25 27-29l2-4c3-3 3-3 6-3Zm12 62c-6 0-7 1-10 2-8 5-11 7-15 16-2 3-2 5-2 14s0 11 2 13l1 4c0 1 8 10 12 12 4 3 12 4 18 3l7-3c4-2 11-11 11-12l2-4 1-13-1-14c-5-9-8-12-15-16-4-2-5-2-11-2Zm3 18c3 1 6 3 7 8 2 6 2 7 0 12-2 6-7 10-10 10s-7-4-9-10c-2-5-2-6 0-12 1-5 3-7 6-8h6Z" />
        </svg>
    ),
    legs: (
        <svg width="100%" height="100%" viewBox="0 0 277 303">
            <path d="m117 0 45 1 7 2 8 1 5 2h3l5 2 5 2c7 2 13 5 18 9l9 6c11 7 20 17 26 27l4 5 2 4 2 5 4 7 1 5c4 13 4 27 2 40l-3 6-4 12c-7 14-17 27-29 37l-5 3-4 3-4 3-4 2-4 3c-3 2-3 3-4 7-2 9-2 27-2 28l3 5 2 3h12l16 1 8 2 6 1 4 2 9 4c5 4 10 8 14 14 3 4 4 10 2 18-1 6-1 6-4 10-4 6-6 7-11 10l-4 3-2 1-3 1-4 2-10 3-10 1h-23l-9-1-6-2-17-7c-3-3-13-12-15-17l-3-4 1-15c0-13 0-16 2-20l1-10 2-6 1-4 2-5 1-7c1-5 1-6-7-4-12 2-24 2-36 1h-3v4l1 5c3 10 4 21 3 32l-1 23-3 4c-2 7-6 11-12 15l-5 3-6 3-4 2-4 1-5 2-8 1c-6 2-22 2-28 0l-6-1-6-2-17-7-8-6-7-9-1-3-2-8c0-7 3-14 10-20l6-5 3-2 2-1 3-2 4-1 9-3 7-2 18-1h12l3-3 5-8c1-5 1-10-1-19 0-3-1-3-8-6l-14-8-2-1-6-5c-10-8-21-20-24-25l-4-8-2-3-1-2-4-11c-4-13-5-27-2-41l1-6c6-19 17-35 32-47l7-6 11-7 7-3 3-3h2l4-2 5-1 3-2 6-1 11-3 6-1 6-2h-1ZM68 80c-6 0-8 0-12 2s-10 8-12 10l-3 5-2 6-1 7v12l3 9 1 4 10 10c4 3 11 6 16 6 4 0 12-3 15-6l7-7 1-1c4-4 7-20 6-28l-1-6c0-1-2-7-4-9-3-4-10-10-14-12s-4-2-10-2Zm96 0c-9 0-11 1-18 7-3 3-6 6-9 13-2 3-2 4-2 14 0 12 0 14 5 24l9 8 2 1 13 4 15-4c5-4 13-15 13-18l2-6c1-4 0-21-3-25l-2-2c0-3-9-12-14-14l-2-1-9-1ZM68 95c3 0 12 7 12 12l1 9-1 10c-3 5-6 8-7 8l-3 1c-2 1-8-1-11-3l-3-6c-2-3-2-4-2-11 0-6 0-7 2-10 2-5 3-6 8-9l4-1Zm102 2c3 2 7 8 7 10l1 4v9c-1 5-2 6-4 9-4 6-8 7-13 6l-8-7-1-4-2-9c0-6 0-7 2-10 1-3 3-6 6-7 4-4 7-4 12-1Z" />
        </svg>
    ),
    quadruped: (
        <svg width="100%" height="100%" viewBox="0 0 300 347">
            <path d="M120 0c3 0 3 0 7 5 3 3 5 6 6 10l2 2 3 6 4 9 8 16 1 3 2 5 5 10 1 5 3 7 2 5 2 12 2 10v19l-1 7-2 6-1 3h10c26-2 50 0 63 5 22 4 40 17 53 35l3 5 2 6 1 4 2 5 1 7 1 8c0 4-2 12-4 12l-1 2-2 2c-3 4-5 9-6 19-1 4 0 12 1 16l1 5 6 21 1 4c1 2 2 4 2 12s0 9-2 12l-10 9-4 2-4 1-6 2-14 1-13-1-5-2-4-3c-4-3-4-4-4-9 0-3 0-5 2-8 3-4 7-7 12-10l5-5c3-5 3-4 1-10l-3-6-2-1-9-12c-1-2-4-5-7-6-4-2-5-2-15-2l-14 2-5 1-6 2-3 1c-3 0-3 3-2 6l5 15 1 6 3 14v18l-1 4c0 3-7 10-12 13l-6 2c-16 5-32 3-46-6-4-3-3-12 2-15l12-9 4-3c1-1 2-5 1-12 0-9 0-11-2-15l-3-7-1-3c0-2-13-14-14-14l-4-1-4-2c-3 0-3 0-2 3l2 5 2 7c2 12 2 24 1 36l-1 3-5 6-3 2-4 1-6 2-16 1-18-1c-5-2-11-8-11-12l1-5 2-3 8-9 6-3 3-2 5-4 1-13-1-12-3-8-2-3v-2l-3-3-2-4-1-4-3-3-2-4-3-9-2-5-1-8-3-9-1-4-11-11-18-8c-6-3-20-16-21-19l-3-5-3-4-2-5-1-8c0-9 3-14 11-20 11-9 20-20 22-25l1-2c1 0 2 0 2-2l9-14c3-3 6-8 6-16l1-7 2-6 2-8 1-7 2-9 1-7c0-5 5-10 8-8 3 1 5 5 6 7l1 2 2 3 2 4 1 3 2 5 1 4 2 2 3 9 1 6c1 6 2 6 7 7h5l2-4 2-7 1-5 6-24 2-6 1-6c2-2 3-2 5-2ZM97 89l-6 1-4 2c-3 0-8 6-10 10-3 4-6 11-6 16 0 6 3 15 7 19 4 6 9 9 14 10 6 1 13-1 15-2l9-9 2-3 3-17-3-11-1-4c-2-3-7-7-11-9-3-2-5-3-9-3Zm4 18c3 3 4 6 4 12 0 5-2 8-4 11-2 2-7 2-9-1-2-1-5-8-5-10 0-4 3-11 5-12 4-3 6-3 9 0Z" />
        </svg>
    ),
    wings: (
        <svg width="100%" height="100%" viewBox="0 0 337 279">
            <path d="M197 0c13 0 15 0 18 2l4 1 4 2 4 1 2 1 3 2 13 8c6 4 20 18 22 21l6 8 4 5 6 9 4 8 4 6 2 4 5 9 1 2 5 9 15 30 1 3 2 3 1 3 2 3 2 5 3 4 4 6 3 4c-1 2-7 2-12 1l-8-2-4-1a93 93 0 0 1-45-40l-2-1c-2 0-2 0-2 5l-4 22c-2 3-2 3-6 3l-7-1-8-4c-7-4-13-10-19-16l-5-5-5 5c-1 3-10 12-11 12l-12 6-2 1-4 2c-4 1-4 2-2 4s3 2 9 2l9 2 5 1 13 6c8 3 15 11 19 18l2 6c2 3 2 4 2 15 0 12 0 12-4 24-7 20-21 37-39 49l-7 4-6 2h-9l-4-2-2-3c-2-3-2-12 0-17l2-5c0-2 0-3-2-4l-4-1-4-2-3-1c-4-3-5-2-10 5-3 6-12 17-16 20-5 3-5 3-9 3-4 1-5 0-6-1l-6-8-2-6-1-9c0-6-2-10-2-8l-3 5-1 3c0 1-2 4-5 6-6 7-8 7-14 1l-5-6-2-1-3-6-1-4-2-3-1-4-2-4-1-6-2-3-1-7-1-6c-1-2-12-4-21-5l-10-1-3-2-6-2c-5-3-15-11-16-16l-2-3-2-7v-7l1-3c0-3 4-9 10-14l9-7 8-13 6-9 6-10 11-11h2l3-3 3-1 7-2 8-1c5-2 16-1 20 0l4 1 4 2 5 2a290 290 0 0 1 45 38c2 0 4-1 10-8 9-9 13-14 17-23l4-7 1-1 1-4 2-5 1-6c2-4 2-6 2-24l-1-23-2-7-2-6v-3l-2-5-1-4-1-2c-2-1-2-2-1-3h17Zm-97 119c-7 0-8 0-11 3-5 3-9 9-12 15-2 6-2 18 0 21l2 5c0 1 7 10 9 10l3 2 9 1 9-1 3-2 6-6 3-5 1-4c2-3 2-4 2-10-1-8-2-14-5-17l-1-3s-2-3-8-6c-3-3-3-3-10-3Zm4 17c5 5 6 13 3 20-3 5-4 5-7 5-8 0-12-13-7-21l4-4c1-2 4-2 7 0Zm27-123v2c-2 2-2 19 0 23l2 8 1 4 2 3 1 5 3 7 2 3 1 5 3 7 2 6 1 9v9c-1 4-3 6-4 3l-8-10-12-11c-10-7-22-11-34-12h-6c-1-1 1-14 1-15 4-12 11-22 20-30l17-14 4-1c3-2 4-3 4-1Z" />
        </svg>
    ),
    tentacles: (
        <svg width="100%" height="100%" viewBox="0 0 281 308">
            <path d="m167 2 6 1 6 1 5 2 6 2c25 8 46 26 58 49l2 3c6 15 9 31 7 47l-1 12-2 4-3 9-3 6-1 2-2 3-5 7-5 6v5c3 9 6 17 11 26l5 8c2 5 23 24 25 24l2 2 2 4 1 7-1 9-2 2-7 6-6 1c-6 0-10-1-21-9l-15-17c-9-10-9-10-13-18l-8-17-2-4c0-2-2-3-4-3h-3l1 6 2 10 1 7 5 17 3 9 1 3 6 15 3 6 3 4 3 6 5 6 1 9-1 9-7 7-5 2c-3 1-4 1-11-1l-9-8-1-2-5-7-2-5-4-6-2-3-2-7-2-3-1-3-2-5-1-4-2-3-1-5-2-6-1-4-3-11-2-6v-5l-2-6c-1-4-2-5-4-3-2 1-2 2-2 8l2 39 2 22 1 19v15l-1 3-6 5c-3 2-4 2-10 2l-8-1-3-2-5-7-1-5-2-8-1-12c0-26-2-51-5-77 0-2-2-3-4 0l-2 6-1 6-3 12-3 11-2 4-1 6-2 3-1 5-5 11-1 3-2 2-4 10-8 12c-1 3-6 8-9 10l-5 1c-3 2-11-1-15-5l-3-4-3-8 4-11 4-8 3-4 3-4v-2l2-3 3-8 1-3 3-9 2-3 3-9 1-7 2-6 1-5 2-7c2-7 1-10-2-10-2 0-3 1-4 3l-2 5-7 15-4 6-2 3c-4 7-9 13-14 18-7 7-14 13-16 13l-8 5-5 1-4-1c-5-2-11-7-11-9l-2-4v-10l2-3c0-2 8-9 9-9l18-17 2-5c3-3 7-10 7-12l1-2 2-3 1-4 3-8c2-4 2-6-1-10l-3-4-5-7-1-3-3-3-3-9-2-4-1-5-2-8-1-16 1-13 3-11 2-4 5-11 1-2c7-11 15-20 25-29 5-4 14-10 16-10l6-3 3-2 11-4 4-1 7-2a174 174 0 0 1 59-1ZM71 47c-4 2-9 4-13 9l-4 5-2 2-2 5-2 4c-1 2-1 17 1 23 3 9 7 15 13 19 5 3 12 5 17 5l10-3 3-3c5-2 11-9 13-17 2-6 2-21 0-26-2-7-4-10-7-14-6-4-6-6-9-6l-3-2-15-1Zm93 2-6 3c-5 4-9 10-12 16l-1 5c-2 3-2 4-2 10 1 6 3 16 5 18l1 3c0 1 6 7 10 9 5 3 10 6 15 6 4 0 10-3 13-4l3-2 7-8 2-2 3-6 1-15-1-11-1-4c-2-6-11-15-17-18-5-2-17-3-20 0ZM83 65c3 2 6 6 6 8l2 3c1 2 1 10-1 15-1 4-5 9-9 10-4 2-4 2-7 0-5-1-7-4-9-8-3-9-3-13 0-19 2-5 3-7 7-9 4-3 6-3 11 0Zm100 3 2 3 2 3 1 8c0 5 0 6-2 10-3 7-5 9-11 10l-6-1c-2 0-8-6-8-9l-1-5c-1-3-1-3 1-13 2-6 6-9 11-11 3-1 6 0 11 5Z" />
        </svg>
    ),
    heads: (
        <svg width="100%" height="100%" viewBox="0 0 299 299">
            <path d="M82 77c6 0 6 0 9 3 5 6 5 7 5 15 0 7 0 8-2 12-2 5-8 9-12 9s-9-3-11-9c-2-4-2-5-2-11l1-9 5-8c2-2 3-2 7-2Zm101 0 7 6c3 3 3 13 2 20s-8 13-14 13l-3-1-3-2c-2-1-5-5-6-9-2-3-1-16 1-19 2-5 5-7 9-8h7Zm105 151-1 9-2 4-1 4-2 3c0 2-14 15-16 15l-4 1c-2 2-4 3-15 3-9 0-11-1-13-3-7-2-13-7-18-13-5-9-8-16-8-23l3-16 2-3 6-8c7-6 11-8 19-11l5-1c24-3 44 15 45 39ZM46 193h15l10 3 12 6 2 1c1 0 12 11 14 15l2 4 4 9 1 7v16l-1 7-3 7c0 3-16 22-19 22l-2 1c-1 1-8 5-11 5l-4 1c-5 3-21 3-26 0l-5-1-4-2-7-4-15-14-5-9-1-3c-4-11-4-22-1-32l3-7 1-3c0-3 13-19 16-19l2-2 11-5 11-2v-1ZM280 1l5 2 7 5c7 8 9 17 5 27-1 4-7 12-9 12l-3 1c-1 2-3 2-12 2-10 0-11 0-17-6s-6-7-7-14 0-14 3-18c4-5 8-8 11-9l6-2c1-2 8-1 11 0ZM152 8l13 1 12 1 12 3 9 3 4 1 5 3 7 3 18 12 20 22 7 12 5 13 2 4 1 18-1 21-2 6-1 4-2 4-3 6-11 18-16 15-10 7-3 2-4 3-4 1-3 2-2 1-4 2-16 5-7 1c-19 4-41 4-58-1l-8-1-5-2c-21-6-39-18-53-35l-9-12-2-3-4-9-2-3-1-6-2-6-1-20 1-17 3-5c0-6 2-9 3-12l3-6 11-14 13-14c3-3 13-10 15-10 5-3 10-7 16-9l4-1 9-3 5-2 21-3h15ZM78 61l-4 1-5 2c-4 3-9 7-9 9l-2 1-6 15v14c2 11 9 21 19 26 4 2 5 2 12 2l8-1 3-2 7-4c4-4 10-14 10-16l1-7c1-6 0-17-3-21l-3-6-1-1c0-2-6-8-8-8l-2-1-7-2c-5-2-10-2-10-1Zm81 9c-3 3-6 6-6 9l-2 3-1 14 1 14 2 4c0 1 4 7 8 10 7 6 10 7 18 7l9-1 3-1c8-5 14-13 17-22 2-11 2-12 1-16l-1-8-2-4-2-3-5-6c-8-7-8-7-12-8-11-3-21 0-28 8Z" />
        </svg>
    ),
    humanoid: (
        <svg width="100%" height="100%" viewBox="0 0 221 350">
            <path d="M87 0c3 0 7 5 17 19l9 15h4l13-12c15-15 17-16 22-17s11 0 14 2 7 6 7 8l2 3v6c0 6-2 9-9 16l-8 9 6 4c14 10 25 24 30 41 3 10 4 20 2 30l-3 6-1 5-1 3-2 5-4 5c-2 4-16 19-17 19l-8 5-3 1-2 2c0 1 6 4 9 4l4 2 4 1 3 1 3 2 10 5c5 3 14 14 18 19 5 8 12 23 12 26l2 4 1 15-1 14-2 4-3 5c-7 7-20 12-26 9l-3-2c-2 0-10-7-10-7l-1-4c-3-4-3-13 0-17l1-5 2-4 1-7c0-5-1-8-5-16-3-5-11-12-14-13h-3v4l3 13-1 18c-2 13-2 29 1 34l1 5 5 13 1 4 2 5c2 3 2 15 0 19l-2 4-1 2-3 4c-3 4-13 11-16 11l-5 2-9 1c-8 0-15-2-19-7l-4-3v-8c0-7 0-7 2-10l1-3 11-11 6-3 3-3c2-2 1-6 0-9l-2-3-1-4-3-3h-18c-10 0-11 1-11 3l2 4 1 16-1 15-2 3-11 11-3 2-4 1-4 2-13 1c-11 0-11 0-15-2-6-3-9-5-11-8-4-8-2-16 6-24l6-5 3-1 3-2 3-1 5-2 5-2c3-2 3-2 3-5l-3-15-3-9-1-6c-4-10-6-22-5-33l-1-20c-3 0-8 4-8 5l-1 2-3 6-2 4-1 7-2 11-1 8-2 4c0 1-4 7-8 10-5 3-11 5-16 3l-9-4c-3-6-5-12-5-18l1-8c2-9 5-19 10-27 2-4 17-19 21-21l4-2 4-2 3-2 3-1 3-2 9-3c3 0 7-3 7-4l-1-2c-3-1-20-15-20-17-3-4-7-9-9-14l-1-4c-5-9-6-27-3-37l1-7 2-4 1-2 2-3c7-13 18-24 30-32l5-2c4-2 4-5 1-8l-2-2c0-1-1-4-4-7-4-6-4-6-5-12 0-9 0-10 5-15 3-3 5-4 8-4h12ZM59 88c-4 1-5 2-10 6l-5 7-1 5c-2 2-2 3-2 9 1 8 2 14 5 16l9 9 3 2 6 1 6-1 4-2c2 0 8-7 10-10l1-2 3-11c0-5-1-13-3-16l-2-3-4-4-9-6H59Zm64 7c-5 1-9 4-12 8l-4 5-1 4c-3 3-3 16 0 21 3 7 5 9 10 12 5 4 5 4 11 4l9-1 10-10 2-3c3-5 3-22 0-27l-9-10-3-1c-2-2-9-3-13-2Zm-55 8c5 4 8 12 5 18-3 5-6 7-9 7-6 0-9-7-8-16 0-3 1-4 3-7 4-4 6-4 9-2Zm67 12c4 8 1 18-6 20-7 1-11-6-10-17 0-3 1-4 3-6 4-5 10-3 13 3Z" />
        </svg>
    ),
    "bug-wings": (
        <svg width="100%" height="100%" viewBox="0 0 327 265">
            <path d="m272 0 18 2c9 5 17 11 23 20l11 22 2 3 1 10-1 11-2 5-10 13-12 9-6 2-3 2-2 1-11 4-14 5-3 1-5 2-16 4-6 2-7 2-5 1-5 1-6 2-7 1-15 5-5 1-4 2c-6 1-1 3 15 6l6 1 5 2 4 1 3 2c2 0 12 9 15 13 9 10 12 25 8 37l-1 6-1 5c-3 9-7 18-12 25-6 8-12 15-20 20l-2 3-8 5-2 1-3 2-4 1-6 2c-4 0-5 0-8-2-2-3-3-3-4-8v-8l1-5 2-4c1-2 1-2-1-4l-4-2-6-2c-4-3-7-3-8 0l-2 3-13 16c-3 4-11 9-14 10-3 0-3 0-6-3-4-4-8-11-8-14l-3-14c0-2-2-2-3 1l-7 12c-3 2-3 3-6 3s-4 0-9-5l-5-7-1-2-3-6-2-4-7-23c-2-9-2-9-12-10l-14-2-6-1-7-3c-3 0-18-14-20-18l-1-5c-3-4-3-11 0-15 3-6 5-8 9-12 6-4 9-7 12-11l3-4 2-3 5-11 2-2 1-2 3-5c5-8 13-14 23-17l5-2 18-1 16 1 15 9 20 17 19 19c3 3 3 4 5 3l2-3c0-3 2-7 5-12l1-3 2-3 2-4 1-3 1-2 2-3 2-3 3-5 5-10 3-5 8-10 3-3c9-12 18-23 29-33l6-5 7-4c5-4 9-6 12-6l3-3 9-1 6-1ZM101 103l-5 1-3 1c-4 1-10 8-13 13l-3 9v10l1 7c0 2 6 11 10 14 7 5 15 6 19 3l3-1c2 0 9-8 12-12 2-5 3-14 3-18l-3-12-2-2-4-6-9-6-6-1Zm2 17c5 3 7 8 6 17-1 4-2 5-4 7l-4 3c-3 0-8-5-8-7l-1-4v-6c1-5 3-8 6-10h5Zm19-109c6 1 11 3 18 8 5 3 13 12 13 15l1 1 2 4c5 20 5 40 2 60-1 3-3 4-5 2l-1-3-3-4-5-6-3-5-1-2-5-7c-10-13-19-28-25-43l-3-8-1-6 1-3 3-3h12Zm168 117c5 3 9 6 9 11 0 8-8 20-15 25-3 2-5 2-12 2s-7 0-15-4c-13-7-25-15-35-25l-2-1c-2-1 0-3 3-3l15-3a172 172 0 0 1 52-2Z" />
        </svg>
    ),
    armor: (
        <svg width="100%" height="100%" viewBox="0 0 316 295">
            <path d="M98 0c4 0 15 10 21 18l7 15 1 2 2 5 2 7v7l1 4 6 4 18 11 16 16c3 4 3 4 6 3l7-1 3-2 24-4 6-1 11 1c8 1 17 3 21 6l4 1 9 5c10 6 19 14 25 24 8 13 11 29 7 44l-1 7-2 4-3 6c-2 2-2 5 0 7l5 7 4 5 2 4 2 5 2 3 2 2 3 6 1 4 3 5 1 5c2 4 2 15 2 18l-1 6c0 3-9 12-15 15-9 4-8 4-21 4l-16-1-4-2-3 3-9 7-10 4c-8 2-20 2-23 0l-8-3c-3-3-6-3-9 1l-5 3-3 2-4 1-6 1h-17l-5-1-5-1-3-2-8-8-1-3c-2-2-2-7 0-10l1-3c0-2 10-11 13-12l4-2 2-1 12-4v-3l-1-3-1-5-2-3-1-4-3-6c-4-5-5-6-5-8-1-3-2-3-7 0l-4 3-4 2c-7 5-15 8-24 10-14 3-29 4-43 2l-8-2c-3 0-3 1-1 8l1 15-1 14c-4 6-9 11-15 14-5 3-11 5-18 5-6 1-17-1-22-4l-10-8-1-3c-3-3-3-8 0-13 2-4 11-13 13-13l4-1 7-3 7-2c3-1 5-6 6-15v-7l-10-10c-10-9-18-21-23-35l-1-3-2-6c-2-11-3-21-1-32l1-7c1-6 2-10 7-18l7-13 17-19 7-4 3-4-4-11-7-7-8-7c-2 0-8-5-11-7-1-3-2-7-1-12 0-3 1-4 4-7s3-4 7-4c4-1 11 0 13 2 13 7 25 18 32 31l2 4 1 3c0 2 4 4 7 3l10-1 10-1c1-1 0-6-1-8l-1-3-10-13c-7-7-8-9-8-15l1-6 1-3 7-4h10ZM29 118l-3 1-9 8-2 4-1 5c-2 1-2 4-2 12s0 9 2 12l1 3 3 4c0 2 4 5 8 7l6 3 9 1 5-2 13-13c5-12 5-21 0-33-3-4-8-9-13-12s-12-3-17 0Zm75 0c-5 3-9 8-11 11l-2 4-3 15c0 3 2 12 4 15l1 2 10 10 7 2h8c5-1 10-4 13-7l4-7 2-4 1-12-1-14c-5-8-9-12-15-15s-12-3-18 0Zm161 90-3 1-3 2-3 1-3 2-3 1c-2 0-2 5 0 7l3 6 2 2 2 5c2 4 4 5 5 3l4-2 6-1 5-2 3-1v-5l-1-4-2-4-6-12c-2-2-3-2-6 1Zm-70 10h-4v2l3 4 1 2 8 15 1 5c1 2 1 2 3 2l7-1 7-3 5-1 2-2-2-6-3-7-1-3c0-3-2-4-7-4l-20-3ZM37 132c2 0 4 1 5 3l3 4 1 1 1 5c1 9-4 17-10 17-3 0-6-2-7-4l-1-2-2-8c0-6 0-6 2-9l3-6 5-1Zm85 6c2 4 2 15 0 18l-3 3c0 2-6 4-7 3-5-1-9-9-8-16 1-8 1-10 6-13 4-3 8-1 12 5Z" />
        </svg>
    ),
};
